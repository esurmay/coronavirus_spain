{"version":3,"sources":["styles/LineGraph.module.css","components/CardsHeaderData.js","components/ChartData.js","components/Home.js"],"names":["module","exports","CardDataHeader","props","state","data","fechaUltima","this","getData","setState","isLoading","funciones","genericsFunctions","datos","iteracion","fechaActual","Date","i","setDate","getDate","getDataForHeaders","undefined","length","casosPCR","fallecidos","recuperados","Hospitalizados","UCI","Fecha","last","Casos","CasosPCR","Recuperados","Fallecidos","dataResult","route","total","Descripcion","toLocaleString","map","x","index","color","key","toString","className","to","renderCardsHeaders","Component","LineGraph","chartRef","React","createRef","getDataforBars","then","chartObject","createChart","chartColors","fechas","item","activos","casos","type","labels","datasets","label","backgroundColor","borderColor","fill","options","chartOptions","responsive","title","display","text","tooltips","mode","hover","intersect","scales","xAxes","yAxes","classes","graphContainer","Home","rangoFechas","showComponent","align","DailyTable","FechaInicio","FechaFin","rel","target","href"],"mappings":"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","file":"static/js/4.091baeea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"graphContainer\":\"LineGraph_graphContainer__1pMjk\"};","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport '../styles/ContainerDataHeader.css'\r\nimport genericsFunctions from '../services/services';\r\n\r\n\r\n// get our fontawesome imports\r\nimport { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass CardDataHeader extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { data: [], fechaUltima: \"\" };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    async getData() {\r\n\r\n        this.setState({ isLoading: true })\r\n\r\n        let funciones = new genericsFunctions();\r\n        let datos = [];\r\n        let iteracion = 1;\r\n        let fechaActual = new Date();\r\n\r\n        for (let i = 0; i <= iteracion; i++) {\r\n\r\n            fechaActual.setDate(fechaActual.getDate() - 1);\r\n\r\n            datos = await funciones.getDataForHeaders(fechaActual);\r\n\r\n            if (datos === undefined || datos.length === 0) {\r\n                iteracion++;\r\n            }\r\n            i++;\r\n\r\n        }\r\n\r\n        let dataResult = [];\r\n\r\n        let casos = 0;\r\n        let casosPCR = 0;\r\n        let activos = 0;\r\n        let fallecidos = 0;\r\n        let recuperados = 0;\r\n        let Hospitalizados = 0;\r\n        let UCI = 0;\r\n        let Fecha = \"\";\r\n\r\n        if (datos && datos.length > 0) {\r\n\r\n            let last = datos[datos.length - 1];\r\n\r\n            Fecha = last.Fecha;\r\n            casos = last.Casos;\r\n            casosPCR = last.CasosPCR;\r\n            activos = (last.CasosPCR + last.Casos) - last.Recuperados - last.Fallecidos;\r\n            fallecidos = last.Fallecidos;\r\n            recuperados = last.Recuperados;\r\n            Hospitalizados = last.Hospitalizados;\r\n            UCI = last.UCI;\r\n        }\r\n\r\n        dataResult = [\r\n\r\n            { route: \"/FasesDesescalada\", Fecha: Fecha, total: \"Ver detalles...\", Descripcion: \"Fases de desescalada\" },\r\n            { route: \"/Casos\", Fecha: Fecha, total: \"Ver detalles...\", Descripcion: \"Casos por dia\" },\r\n            { route: \"/coronavirus_spain\", Fecha: Fecha, total: casosPCR.toLocaleString(), Descripcion: \"Total Casos\" },\r\n            { route: \"/coronavirus_spain\", Fecha: Fecha, total: recuperados.toLocaleString(), Descripcion: \"Recuperados\" },\r\n            { route: \"/coronavirus_spain\", Fecha: Fecha, total: Hospitalizados.toLocaleString(), Descripcion: \"Hospitalizados\" },\r\n            { route: \"/coronavirus_spain\", Fecha: Fecha, total: UCI.toLocaleString(), Descripcion: \"UCI\" },\r\n            { route: \"/coronavirus_spain\", Fecha: Fecha, total: fallecidos.toLocaleString(), Descripcion: \"Fallecidos\" },\r\n\r\n\r\n        ]\r\n\r\n\r\n        this.setState({ data: dataResult, isLoading: false, fechaUltima: Fecha })\r\n\r\n    }\r\n\r\n\r\n    renderCardsHeaders() {\r\n\r\n        if (this.state.data && this.state.data.length > 0) {\r\n\r\n            let divStyle = {\r\n                color: 'white',\r\n            };\r\n\r\n            return (this.state.data || []).map((x, index) => {\r\n\r\n                if (x.Descripcion === \"Casos Activos\")\r\n                    divStyle = { color: 'yellow' };\r\n                else\r\n                    divStyle = { color: 'white' };\r\n\r\n                return (\r\n                    <div key={index.toString()} className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                        <Link to={x.route}>\r\n                            <div className=\"card\">\r\n                                <div className=\"card-horizontal\">\r\n                                    <div className=\"card-bodyTotales\">\r\n                                        <h4 className=\"\">{x.Descripcion}</h4>\r\n                                        <h5 className=\"card-text text-center\">\r\n                                            <strong>{x.total}</strong> \r\n                                            {/* | <span title={x.Fecha}><FontAwesomeIcon icon={faInfoCircle} style={divStyle} /> </span> */}\r\n                                        </h5>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n        else {\r\n\r\n            if (this.state.isLoading) {\r\n                let fakeArray = [\r\n                    { total: 0, Descripcion: \"Total Casos\" },\r\n                    { total: 0, Descripcion: \"Casos Activos\" },\r\n                    { total: 0, Descripcion: \"Fallecidos\" },\r\n                    { total: 0, Descripcion: \"Recuperados\" }\r\n                ];\r\n\r\n                return (fakeArray).map((x, index) => {\r\n                    return (\r\n                        <div key={index.toString()} className=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                            <div className=\"card\">\r\n                                <div className=\"comentario br animatemore w100\"></div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    )\r\n                })\r\n            }\r\n            else {\r\n                return (\r\n                    <p>No hay Datos disponibles</p>\r\n                )\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-xs-12 col-12 divFooter\">\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n                        <h6>Ultima Actualización: {this.state.fechaUltima}</h6>\r\n                        {/* <Link to=\"/Notes\"><strong>Nota importante de pagina oficial</strong></Link> */}\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n\r\n\r\n                    {this.renderCardsHeaders()}\r\n                    <div className=\"col-xs-12 col-12\">                      \r\n                        <Link to=\"/Notes\"><strong>Nota importante de pagina oficial</strong></Link>      \r\n                        <br></br>\r\n                        <br></br>\r\n                    </div>\r\n                    <div className=\"col-xs-12 col-12 divFooter d-none d-md-block d-lg-block\">\r\n                        <br></br>\r\n                        <hr className=\"new1\"></hr>\r\n                        <br></br>\r\n                    </div>\r\n                   \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default CardDataHeader;","import React, { Component } from 'react'\r\nimport classes from '../styles/LineGraph.module.css';\r\nimport genericsFunctions from '../services/services';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nexport default class LineGraph extends Component {\r\n    chartRef = React.createRef();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { data: [], isLoading: true };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n\r\n    }\r\n\r\n    getData() {\r\n\r\n        this.setState({ isLoading: true })\r\n\r\n        let funciones = new genericsFunctions();\r\n        let retrieve = funciones.getDataforBars();\r\n\r\n        retrieve.then(dataResult => {\r\n\r\n            let chartObject = this.createChart(dataResult);\r\n            this.setState({ data: chartObject, isLoading: false })\r\n        })\r\n\r\n\r\n    }\r\n\r\n    createChart(datos) {\r\n\r\n        var chartColors = {\r\n            red: 'rgb(255, 99, 132)',\r\n            orange: 'rgb(255, 159, 64)',\r\n            yellow: 'rgb(255, 205, 86)',\r\n            green: 'rgb(75, 192, 192)',\r\n            blue: 'rgb(54, 162, 235)',\r\n            purple: 'rgb(153, 102, 255)',\r\n            grey: 'rgb(231,233,237)'\r\n        };\r\n\r\n        let fechas = datos.map((item) => item.Fecha);\r\n        let activos = datos.map((item) => (item.Casos + item.CasosPCR) - item.Recuperados - item.Fallecidos);\r\n        let casos = datos.map((item) => item.Casos + item.CasosPCR);\r\n        let fallecidos = datos.map((item) => item.Fallecidos);\r\n        let recuperados = datos.map((item) => item.Recuperados);\r\n        let Months = [...fechas];\r\n\r\n        let data = {\r\n            type: \"line\",\r\n            data: {\r\n\r\n                labels: Months,\r\n                datasets: [{\r\n                    label: \"Activos\",\r\n                    backgroundColor: chartColors.yellow,\r\n                    borderColor: \"yellow\",\r\n                    data: [...activos],\r\n                    fill: false,\r\n                },\r\n                {\r\n                    label: \"Totales\",\r\n                    backgroundColor: chartColors.red,\r\n                    borderColor: \"red\",\r\n                    data: [...casos],\r\n                    fill: false,\r\n                }, {\r\n                    label: \"fallecidos\",\r\n                    fill: false,\r\n                    backgroundColor: \"black\",\r\n                    borderColor: \"gray\",\r\n                    data: [...fallecidos],\r\n                }, {\r\n                    label: \"recuperados\",\r\n                    fill: false,\r\n                    backgroundColor: chartColors.green,\r\n                    borderColor: \"green\",\r\n                    data: [...recuperados],\r\n                }]\r\n            },\r\n            options: this.chartOptions(),\r\n        }\r\n\r\n        return data;\r\n\r\n    }\r\n\r\n    chartOptions() {\r\n        let options = {\r\n            responsive: true,\r\n            title: {\r\n                display: false,\r\n                text: 'historico'\r\n            },\r\n            tooltips: {\r\n                mode: 'label',\r\n            },\r\n            hover: {\r\n                mode: 'nearest',\r\n                intersect: true\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n\r\n                }]\r\n            }\r\n        };\r\n        return options;\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <div className=\"col-sm-12 col-md-12 col-lg-12 col-xl-12\">\r\n                    <div className={classes.graphContainer}>\r\n                        <div >\r\n                            <div className=\"comment br animate w80\"></div>\r\n                            <div className=\"comment br animate w80\"></div>\r\n                        </div>\r\n                        <div >\r\n                            <div className=\"comment br animate w80\"></div>\r\n                            <div className=\"comment br animate w80\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div className={classes.graphContainer}>\r\n                    <Line data={this.state.data.data}></Line>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport genericsFunctions from '../services/services';\r\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport DailyTable from './DailyTable';\r\nimport CardDataHeader from './CardsHeaderData';\r\nimport LineGraph from './ChartData';\r\nimport Desescalada from \"./desescalada\";\r\n\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = { data: [], isLoading: true, rangoFechas: {}, showComponent: true, }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.getData();\r\n\r\n    }\r\n\r\n    getData() {\r\n\r\n        this.setState({ isLoading: true })\r\n        let funciones = new genericsFunctions();\r\n        let retrieve = funciones.getDataforBars();\r\n        retrieve.then(dataResult => {\r\n            this.setState({ data: dataResult, isLoading: false })\r\n        });\r\n    }\r\n\r\n\r\n    renderTableData() {\r\n\r\n        if (this.state.data && this.state.data.length > 0) {\r\n            return (this.state.data || []).map((x, index) => {\r\n                return (\r\n\r\n                    <li key={index.toString()}>\r\n                        {x.Fecha}: {x.Casos}\r\n                    </li>\r\n\r\n                )\r\n\r\n            })\r\n        }\r\n        else {\r\n\r\n            if (this.state.isLoading) {\r\n                return (\r\n\r\n                    <div className=\"fixed-bottom\">\r\n                        cargando...\r\n                    </div>\r\n\r\n                )\r\n            }\r\n            else {\r\n                return (\r\n\r\n                    <div className=\"fixed-bottom\">\r\n                        No hay datos...\r\n                    </div>\r\n\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"\">\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <br></br>\r\n                        <br></br>\r\n\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <CardDataHeader></CardDataHeader>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"d-none d-md-block d-lg-block col-md-4 col-lg-4 col-xl-4\">\r\n                            <h2 align=\"center\" className=\"tituloTabla\">Situacion</h2>\r\n                            <DailyTable></DailyTable>\r\n                        </div>\r\n                        <div className=\"d-none d-md-block d-lg-block\">\r\n                            <h1>Historico</h1>\r\n                            <h2>{this.state.rangoFechas.FechaInicio} - {this.state.rangoFechas.FechaFin}\r\n                            </h2>\r\n                            <LineGraph></LineGraph>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xs-12 col-12 divFooter\">\r\n\r\n                        <div className=\"d-none d-md-block d-lg-block\">\r\n                                <br></br>\r\n                                <br></br>\r\n                                <br></br>\r\n                                <br></br>\r\n                            </div>\r\n\r\n                            <strong>Importante:</strong> Toda la informacion mostrada en esta pagina web son de las fuentes oficiales de:\r\n                            <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://covid19.isciii.es/\">https://covid19.isciii.es/</a>\r\n                            <br></br>\r\n                            <Link to=\"/ProcesamientoInfo\">Aqui</Link> te contamos como procesamos y almacenamos toda la informacion para luego presentarla Covid19-España\r\n                            <br></br>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xs-12 col-12 divFooter d-none d-md-block d-lg-block\">\r\n                            <br></br>\r\n                            <Link to=\"/Politicas\">Politicas de Privacidad</Link>\r\n                            <p className=\"text-center\">\r\n                                <small className=\"text-center\">All rights reserved</small>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* {this.state.showComponent && <AvisoCookies hideOverlay={this.hide_overlay} />}\r\n       */}\r\n            </div>\r\n\r\n\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Home;"],"sourceRoot":""}